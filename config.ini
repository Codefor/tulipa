;config.ini
;


[trackd]
; host to listen
; "0.0.0.0" is listen all ip
listen_host = 0.0.0.0

; port
listen_port = 8261

;daemon
daemonize = no

; pidfile
pidfile = ./trackd.pid

; Set server verbosity to 'debug'
; it can be one of:
; debug (a lot of information, useful for development/testing)
; verbose (many rarely useful info, but not a mess like the debug level)
; notice (moderately verbose, what you want in production probably)
; warning (only very important / critical messages are logged)
loglevel = debug

; logfile
logfile = ./Tulipa.log

; number of woker threads
num_worker_threads = 12

; The format for the server list is: SERVER[:PORT][,SERVER[:PORT]]
; example:10.0.0.1:4730,10.0.0.2:4730,10.0.0.3:4731
;
job_servers = 127.0.0.1:6379;127.0.0.1:6379;127.0.0.1:6379


[op_func_list]
;
; <op> = <func_name>
; op，int
; func_name，string
;

; monitor func
; used for Trackd's self-check
;
0 = watchme

; ddtrack
1 = ddtrack

; dashboard
2 = dashboard

[op_func_arg]
; <func_name> = arg,arg,arg;optional arg,optional arg
ddtrack	  = trk_id:i,data,dt_len,salt:s:40;t

dashboard = trk_id,data,date,salt

[op_func_0_sinkserver]
sink_servers = 127.0.0.1:6379;127.0.0.1:6379;127.0.0.1:6379
sink_type = redis
test =

[op_func_0_token]
; tokens of op func 1
;


[op_func_1_sinkserver]
sink_servers = 127.0.0.1:6379;127.0.0.1:6379;127.0.0.1:6379
sink_type = redis

[op_func_1_token]
; tokens of op func 1
;
; trk_id1 = token1
; trk_id2 = token2
; ...
;

1 = xxx

[op_func_2_token]
1 = token
2 = token2

[op_func_2_sinkserver]
sink_servers = cq01-dr-peercenterbak01.cq01:5145
sink_type = mysql

user		= root
pass		= test123
db			= zhixin_dashboard

